var logger = require('winston');

class Competition {

    constructor(data) {

        data = (data) ? data : {};

        this._id;   // generated by Database

        this.name = data.name;

        // flags indicating the execution state of this competition
        // a competition can only be started once and has to be stopped explicitly
        // once it has been started, no more editing of teams or tasks is allowed
        this.running = false;
        this.finished = false;
        this.startTimeStamp = null;
        this.endTimeStamp = null;

        // the _id of the currently running task
        // if currentTaskId == null, no task is running
        this.currentTaskId = null;

        // array of taskIds of the tasks that have been executed so far in this competition
        // (sorted chronologically and including current task)
        this.taskSequence = new Array();
    }

    static start(competition) {
        logger.info("starting competition", competition.name);
        logger.verbose("starting competition", competition);
        competition.startTimeStamp = Date.now();
        competition.endTimeStamp = null;
        competition.running = true;
        competition.finished = false;
        competition.currentTaskId = null;
        competition.taskSequence = new Array();
    }

    static stop(competition) {
        logger.info("stopping competition", competition.name);
        logger.verbose("stopping competition", competition);
        competition.endTimeStamp = Date.now();
        competition.running = false;
        competition.finished = true;
        competition.currentTaskId = null;
    }

}

module.exports = Competition;

